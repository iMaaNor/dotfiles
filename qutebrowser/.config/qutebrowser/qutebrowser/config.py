# Dracula Theme
#import dracula.draw

#dracula.draw.blood(c, {
#    'spacing': {
#        'vertical': 6,
#        'horizontal': 8
#    }
#})


# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(True)

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'devtools://*')

# Value to send in the `Accept-Language` header. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version} Edg/{upstream_browser_version}', 'https://accounts.google.com/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Keybinding
config.bind(',M', 'spawn proxychains mpv {url}')
config.bind(',m', 'hint links spawn proxychains mpv {hint-url}')
config.bind(',p', 'set content.private_browsing true ;; spawn notify-send "Private Mode Enabled"')
config.bind(',P', 'set content.private_browsing false ;; spawn notify-send "Private Mode Disablde"')
config.bind('po', 'set-cmd-text -s :open -p ')
config.bind(',fd', 'set content.proxy system ;; spawn notify-send "Proxy set to DEFAULT"')
config.bind(',fq', 'set content.proxy socks://127.0.0.1:1089 ;; spawn notify-send "Proxy set to QV2RAY"')
config.bind(',ft', 'set content.proxy socks://127.0.0.1:9050 ;; spawn notify-send "Proxy set to TOR"')
config.bind(',dd', 'hint links spawn alacritty -e youtube-dl --proxy 127.0.0.1:8889 {hint-url} ;; spawn notify-send "Download Has Been Started"')
config.bind(',ds', 'hint links spawn alacritty -e youtube-dl --proxy 127.0.0.1:8889 --write-auto-sub --sub-lang en {hint-url} ;; spawn notify-send "Download Has Been Started"')
config.bind(',DD', 'spawn alacritty -e youtube-dl --proxy 127.0.0.1:8889 {url} ;; spawn notify-send "Download Has Been Started"')
config.bind(',DS', 'spawn alacritty -e youtube-dl --proxy 127.0.0.1:8889 --write-auto-sub --sub-lang en {url} ;; spawn notify-send "Download Has Been Started"')
config.bind(',xt', 'config-cycle tabs.show always switching')
config.bind(',xb', 'config-cycle statusbar.show always in-mode')
config.bind(',xx', 'config-cycle statusbar.show always in-mode ;; config-cycle tabs.show always switching')
config.bind(',k', 'set colors.webpage.darkmode.enabled true ;; set colors.webpage.darkmode.grayscale.all true ;; set colors.webpage.darkmode.grayscale.images 0.5 ;; set colors.webpage.darkmode.policy.images never ;; spawn notify-send "Darkmode Enabled!"')
config.bind(',K', 'set colors.webpage.darkmode.enabled false ;; set colors.webpage.darkmode.grayscale.all false ;; set colors.webpage.darkmode.grayscale.images 0.0 ;; set colors.webpage.darkmode.policy.images smart ;; spawn notify-send "Darkmode Disabled!"')
config.bind(',yt', 'spawn bash todo.sh -n a "Look For ({title}) IN [{url}] +wikilinux @browsenet" ;; spawn notify-send "Saved to TODO list"')
config.bind(',dl', 'hint links spawn alacritty -e aria2c -d /home/imaan/Downloads {hint-url} ;; spawn notify-send "Download Has Been Started"')
config.bind(',Dl', 'spawn alacritty -e aria2c -d /home/imaan/Downloads {url} ;; spawn notify-send "Download Has Been Started"')

# Nord Theme
config.source('nord-qutebrowser.py')

# Disable Private Browsing at start
config.set('content.private_browsing', False)

# Disable Autoplay by default
config.set('content.autoplay', False)

# Default Page
config.set('url.default_page', '~/.config/qutebrowser/startpage/index.html')
config.set('url.start_pages', '~/.config/qutebrowser/startpage/index.html')

